"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/NFTMinter.js":
/*!*************************************!*\
  !*** ./src/components/NFTMinter.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_toastify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-toastify */ \"./node_modules/react-toastify/dist/react-toastify.esm.mjs\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"./node_modules/react-toastify/dist/ReactToastify.css\");\n/* harmony import */ var react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_toastify_dist_ReactToastify_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _NFTListItem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NFTListItem */ \"./src/components/NFTListItem.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/index.js\");\n/* harmony import */ var _util_useMetaplex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/useMetaplex */ \"./src/util/useMetaplex.js\");\n/* harmony import */ var _metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @metaplex-foundation/js */ \"./node_modules/@metaplex-foundation/js/dist/esm/index.mjs\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst NFTMinter = ()=>{\n    _s();\n    const [imageFile, setImageFile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isMinting, setMinting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [nfts, setNFTs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isFetchingNFTs, setFetchingNFTs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [description, setDescription] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { metaplex: mx } = (0,_util_useMetaplex__WEBPACK_IMPORTED_MODULE_5__.useMetaplex)();\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_6__.useWallet)();\n    const handleImageChange = (e)=>{\n        setImageFile(e.target.files[0]);\n    };\n    const handleTitleChange = (e)=>{\n        setTitle(e.target.value);\n    };\n    const handleDescriptionChange = (e)=>{\n        setDescription(e.target.value);\n    };\n    const getNFts = async ()=>{\n        if (!wallet.publicKey) {\n            return;\n        }\n        setFetchingNFTs(true);\n        try {\n            const myNfts = await mx.nfts().findAllByOwner({\n                owner: wallet.publicKey.toBase58()\n            });\n            const nftPromises = myNfts.map(async (nft)=>{\n                try {\n                    const response = await fetch(nft.uri);\n                    const data = await response.json();\n                    const nftData = {\n                        imageSrc: data.image,\n                        title: data.name\n                    };\n                    return nftData;\n                } catch (error) {\n                    console.error(error);\n                    throw new Error(\"Error fetching NFT. Please try again later.\");\n                }\n            });\n            const fetchedNFTs = await Promise.all(nftPromises);\n            setNFTs(fetchedNFTs);\n        } catch (error) {\n            console.error(error);\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Error fetching NFT. Please try again later.\");\n        } finally{\n            setFetchingNFTs(false);\n        }\n    };\n    async function uploadNFTURI(nftURI, walletAddress) {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            const raw = JSON.stringify({\n                \"nftURI\": nftURI,\n                \"walletAddress\": walletAddress\n            });\n            const requestOptions = {\n                method: \"POST\",\n                headers: myHeaders,\n                body: raw,\n                redirect: \"follow\"\n            };\n            const response = await fetch(\"http://localhost:3000/api/nft\", requestOptions);\n            const data = await response.text();\n            console.log(\"Response:\", data);\n            return data; // You can handle the response data accordingly in your application\n        } catch (error) {\n            console.error(\"Error:\", error);\n            throw new Error(error); // Throw the error for handling it in your application\n        }\n    }\n    const mintNFT = async ()=>{\n        if (!imageFile) {\n            console.log(\"Error\");\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please select an image.\");\n            return;\n        }\n        if (!title) {\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter title.\");\n            return;\n        }\n        try {\n            // Set minting state to true to indicate the start of minting process\n            setMinting(true);\n            const mintingNFT = {\n                imageSrc: \"https://img.freepik.com/free-photo/abstract-surface-textures-white-concrete-stone-wall_74190-8189.jpg?w=2000&t=st=1696525327~exp=1696525927~hmac=c3682581bae49534b2f36a36217c3ef633938e5964e9ac7deec3692377d33738\",\n                title: \"Minting\"\n            };\n            setNFTs([\n                mintingNFT,\n                ...nfts\n            ]);\n            try {\n                await new Promise((resolve, reject)=>{\n                    var reader = new FileReader();\n                    const fileData = new Blob([\n                        imageFile\n                    ], {\n                        type: \"image/png\"\n                    });\n                    reader.readAsArrayBuffer(fileData);\n                    reader.onload = async function(event) {\n                        try {\n                            const arrayBuffer = reader.result;\n                            const { uri, metadata } = await mx.nfts().uploadMetadata({\n                                name: title,\n                                description: description,\n                                image: (0,_metaplex_foundation_js__WEBPACK_IMPORTED_MODULE_7__.toMetaplexFile)(arrayBuffer, \"image/png\")\n                            });\n                            let mintAddress;\n                            const { nftMinted } = await mx.nfts().create({\n                                uri,\n                                name: title,\n                                sellerFeeBasisPoints: 500\n                            }).then((data)=>{\n                                mintAddress = data.mintAddress.toBase58();\n                                return data;\n                            });\n                            resolve(nftMinted);\n                            console.log(\"Mint Address:\", nftMinted);\n                            try {\n                                const data = await uploadNFTURI(mintAddress, wallet.publicKey.toBase58());\n                                console.log(data);\n                            } catch (error) {\n                                console.error(\"Error uploading metadata or minting NFT:\", error);\n                                reject(error);\n                            }\n                        } catch (error) {\n                            console.error(\"Error uploading metadata or minting NFT:\", error);\n                            reject(error);\n                        }\n                    };\n                });\n            } catch (error) {\n                console.error(\"Error reading image file:\", error);\n                react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Error processing image file. Please try again later.\");\n            }\n            const mintedNFT = {\n                imageSrc: URL.createObjectURL(imageFile),\n                title: title\n            };\n            setNFTs([\n                mintedNFT,\n                ...nfts\n            ]);\n            setTitle(\"\");\n            setDescription(\"\");\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"NFT minted successfully!\");\n        } catch (error) {\n            setNFTs(nfts.filter((nft)=>nft.title !== \"Minting\"));\n            console.error(\"Error minting NFT:\", error);\n            react_toastify__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Error minting NFT. Please try again later.\");\n        } finally{\n            // Reset minting state to false after the minting process is completed or if there's an error\n            setMinting(false);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        getNFts();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto mt-8 grid grid-cols-1 gap-4 items-center\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: title,\n                onChange: handleTitleChange,\n                className: \"p-2 border border-gray-300 rounded\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                lineNumber: 198,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"file\",\n                onChange: handleImageChange,\n                accept: \"image/*\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                lineNumber: 207,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"col-span-2 bg-red-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline \".concat(isMinting ? \"opacity-50 cursor-not-allowed\" : \"\"),\n                onClick: mintNFT,\n                disabled: isMinting,\n                children: isMinting ? \"Minting...\" : \"Mint NFT\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                lineNumber: 208,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-left\",\n                children: [\n                    \" \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                        className: \"text-2xl my-4\",\n                        children: \"Available NFTs:\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                        lineNumber: 216,\n                        columnNumber: 9\n                    }, undefined),\n                    !isFetchingNFTs ? nfts.length !== 0 ? nfts.map((nft, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_NFTListItem__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            imageSrc: nft.imageSrc,\n                            title: nft.title\n                        }, index, false, {\n                            fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                            lineNumber: 218,\n                            columnNumber: 11\n                        }, undefined)) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xl\",\n                        children: \"Currently empty.\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                        lineNumber: 219,\n                        columnNumber: 14\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xl\",\n                        children: \"Loading NFTs...\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                        lineNumber: 219,\n                        columnNumber: 61\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n                lineNumber: 215,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\hari3\\\\OneDrive\\\\Desktop\\\\nftminter\\\\src\\\\components\\\\NFTMinter.js\",\n        lineNumber: 197,\n        columnNumber: 5\n    }, undefined);\n};\n_s(NFTMinter, \"qqdlzX0nVDqGSJlGjYfrStEXGA0=\", false, function() {\n    return [\n        _util_useMetaplex__WEBPACK_IMPORTED_MODULE_5__.useMetaplex,\n        _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_6__.useWallet\n    ];\n});\n_c = NFTMinter;\n/* harmony default export */ __webpack_exports__[\"default\"] = (NFTMinter);\nvar _c;\n$RefreshReg$(_c, \"NFTMinter\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/NFTMinter.js\n"));

/***/ })

});